plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':library')

    // for sshj security
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.60'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.60'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'com.github.tomtzook', name: 'castle', version: '2.0.0-beta.3'
    implementation group: 'com.github.tomtzook', name: 'jmath', version: '1.1.0'
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.1'
    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
    implementation group: 'com.hierynomus', name: 'sshj', version: '0.27.0'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.4.2'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.2.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
}

test {
    useJUnitPlatform()

    testLogging {
        events "failed"
        exceptionFormat "full"
        showStackTraces true
    }
}

jar {

}

javafx {
    version = '11'
    modules = [ 'javafx.controls' ]
}

application {
    mainClassName = 'com.flash3388.flashview.Main'
    applicationName = 'flashview'
    applicationDefaultJvmArgs = ['-Djdk.gtk.version=2']
}

distributions {
    main {
        contents {
            from (rootProject.file('command-types.json')) {
                into 'bin'
            }
            from (rootProject.file('config.json')) {
                into 'bin'
            }
        }
    }
}

run {
    args = [
            '--config-file', rootProject.file('config.json'),
            '--command-types-file', rootProject.file('command-types.json')
    ]
}
